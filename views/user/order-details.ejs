<%- include('../partials/user/header') %>

<style>
    .order-details-card {
        border-radius: 10px;
        box-shadow: 0 0 15px rgba(0,0,0,0.1);
        margin-bottom: 30px;
    }
    .status-timeline {
        display: flex;
        justify-content: space-between;
        margin: 30px 0;
        position: relative;
    }
    .status-point {
        display: flex;
        flex-direction: column;
        align-items: center;
        z-index: 1;
    }
    .status-dot {
        width: 20px;
        height: 20px;
        border-radius: 50%;
        margin-bottom: 10px;
    }
    .status-line {
        position: absolute;
        top: 10px;
        left: 0;
        right: 0;
        height: 2px;
        background-color: #e0e0e0;
        z-index: 0;
    }
    .status-active {
        background-color: #28a745;
    }
    .status-inactive {
        background-color: #e0e0e0;
    }
    .address-card {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 20px;
    }
    .product-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 5px;
    }
</style>

<section class="banner-area organic-breadcrumb">
    <div class="container">
        <div class="breadcrumb-banner d-flex flex-wrap align-items-center justify-content-end">
            <div class="col-first">
                <h1>Order Details</h1>
                <nav class="d-flex align-items-center">
                    <a href="/">Home<span class="lnr lnr-arrow-right"></span></a>
                    <a href="/userProfile">Profile<span class="lnr lnr-arrow-right"></span></a>
                    <a href="/orders">Orders<span class="lnr lnr-arrow-right"></span></a>
                    <a href="#">Order Details</a>
                </nav>
            </div>
        </div>
    </div>
</section>

<div class="container my-5">
    <div class="row">
        <div class="col-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/">Home</a></li>
                    <li class="breadcrumb-item"><a href="/orders">Orders</a></li>
                    <li class="breadcrumb-item active">Order #<%= order.orderId %></li>
                </ol>
            </nav>
        </div>
    </div>

    <div class="order-details-card">
        <div class="card">
            <div class="card-header bg-primary text-white">
                <div class="d-flex justify-content-between align-items-center">
                    <h5 class="mb-0">Order #<%= order.orderId %></h5>
                    <span class="badge bg-light text-dark">
                        <%= new Date(order.createdOn).toLocaleDateString() %>
                    </span>
                </div>
            </div>
            
            <div class="card-body">
                <!-- Order Status Timeline -->
                <div class="status-timeline">
                    <div class="status-line"></div>
                    <% const statuses = ['pending', 'confirmed', 'shipped', 'delivered']; %>
                    <% statuses.forEach(status => { %>
                        <div class="status-point">
                            <div class="status-dot <%= order.status === status || statuses.indexOf(order.status) > statuses.indexOf(status) ? 'status-active' : 'status-inactive' %>"></div>
                            <small><%= status.toUpperCase() %></small>
                        </div>
                    <% }); %>
                </div>

                <% if (order.status === 'delivered' && !order.returnReason && order.requestStatus !== "rejected") { %>
                    <div class="card mt-4">
                        <div class="card-header">
                            <h5 class="mb-0">Return Order</h5>
                        </div>
                        <div class="card-body">
                            <button class="btn btn-warning" onclick="initiateReturn('<%= order._id %>')">
                                Request Return
                            </button>
                        </div>
                    </div>
                <% } %>

                <% if (order.requestStatus === 'rejected') { %>
                    <div class="alert alert-danger mt-3">
                        <h6 class="alert-heading">Return Request Rejected</h6>
                        <p><strong>Category:</strong> <%= order.rejectionCategory %></p>
                        <p><strong>Reason:</strong> <%= order.rejectionReason %></p>
                    </div>
                <% } %>
                
                <% if (['return_requested', 'returning', 'returned'].includes(order.status)) { %>
                    <div class="card mt-4">
                        <div class="card-header <%= 
                            order.status === 'returned' ? 'bg-success' :
                            order.requestStatus === 'approved' ? 'bg-success' : 
                            order.requestStatus === 'rejected' ? 'bg-danger' : 
                            'bg-warning' %> text-white">
                            <h5 class="mb-0">Return Status: <%= order.status.replace('_', ' ').toUpperCase() %></h5>
                        </div>
                        <div class="card-body">
                            <p><strong>Return Reason:</strong> <%= order.returnReason %></p>
                            
                            <% if (order.returnImages && order.returnImages.length > 0) { %>
                                <div class="mt-3">
                                    <h6>Uploaded Images:</h6>
                                    <div class="d-flex gap-2">
                                        <% order.returnImages.forEach(image => { %>
                                            <img src="/<%= image %>" alt="Return image" class="img-thumbnail" style="width: 100px;">
                                        <% }); %>
                                    </div>
                                </div>
                            <% } %>

                            <% if (order.status === 'returned') { %>
                                <div class="alert alert-success mt-3">
                                    <strong>Your product has been returned.</strong><br>
                                    We have refunded the amount to your wallet.
                                </div>
                            <% } else if (order.requestStatus === 'approved') { %>
                                <div class="alert alert-success mt-3">
                                    Your return request has been approved and is being processed.
                                </div>
                            <% } else if (order.requestStatus === 'rejected') { %>
                                <div class="alert alert-danger mt-3">
                                    <strong>Return Request Rejected</strong><br>
                                    Reason: <%= order.rejectionReason %>
                                </div>
                            <% } else { %>
                                <div class="alert alert-info mt-3">
                                    Your return request is being reviewed by our team.
                                </div>
                            <% } %>
                        </div>
                    </div>
                <% } %>
                
                <!-- Product Details -->
                <div class="row mb-4">
                    <div class="col-md-8">
                        <h5 class="mb-3">Product Details</h5>
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex">
                                    <img src="<%= order.orderedItems[0].productImages[0] %>" 
                                         alt="<%= order.orderedItems[0].productName %>"
                                         class="product-image me-3">
                                    <div>
                                        <h6><%= order.orderedItems[0].productName %></h6>
                                        <p class="mb-1">Quantity: <%= order.orderedItems[0].quantity %></p>
                                        <p class="mb-1">Price: ₹<%= order.totalPrice/order.orderedItems[0].quantity %></p>
                                        <p class="mb-0">Status: 
                                            <span class="badge <%= 
                                                order.status === 'delivered' ? 'bg-success' :
                                                order.status === 'cancelled' ? 'bg-danger' :
                                                order.status === 'shipped' ? 'bg-info' :
                                                'bg-warning'
                                            %>">
                                                <%= order.status.toUpperCase() %>
                                            </span>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-md-4">
                        <!-- Order Summary -->
                        <h5 class="mb-3">Order Summary</h5>
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Subtotal:</span>
                                    <span>₹<%= order.totalPrice %></span>
                                </div>
                                <% if (order.discount > 0) { %>
                                    <div class="d-flex justify-content-between mb-2 text-success">
                                        <span>Coupon Discount:</span>
                                        <span>-₹<%= Math.round(order.discount) %></span>
                                    </div>
                                <% } %>
                                <div class="d-flex justify-content-between mb-2">
                                    <span>Delivery Charge:</span>
                                    <span>₹<%= Math.round(order.deliveryCharge) %></span>
                                </div>
                                <hr>
                                <div class="d-flex justify-content-between fw-bold">
                                    <span>Total:</span>
                                    <span>₹<%= Math.round(order.finalAmount) %></span>
                                </div>
                                <div class="mt-3">
                                    <span class="text-muted">Payment Method:</span>
                                    <span class="badge <%= 
                                        order.paymentMethod === 'online' ? 'bg-success' :
                                        order.paymentMethod === 'wallet' ? 'bg-info' :
                                        'bg-warning'
                                    %>">
                                    <% if (order.paymentMethod === 'cod') { %>
                                        CASH ON DELIVERY
                                    <% } else if (order.paymentMethod === 'online') { %>
                                        ONLINE PAYMENT
                                    <% } else if (order.paymentMethod === 'wallet') { %>
                                        WALLET PAYMENT
                                    <% } else { %>
                                        UNKNOWN PAYMENT METHOD
                                    <% } %>
                                    </span>
                                </div>
                            </div>
                        </div>

                        <!-- Order Actions -->
                        <div class="order-actions mt-4">
                            <% if (order.status === 'delivered' && !order.returnReason && order.requestStatus !== "rejected") { %>
                                <button class="btn btn-warning" onclick="initiateReturn('<%= order._id %>')">
                                    Request Return
                                </button>
                            <% } else if (order.status === 'return_requested' && order.requestStatus === 'pending') { %>
                                <button class="btn btn-danger" onclick="cancelReturn('<%= order._id %>')">
                                    Cancel Return Request
                                </button>
                            <% } else if (!['delivered', 'cancelled', 'return_requested', 'returning', 'returned'].includes(order.status)) { %>
                                <button onclick="cancelOrder('<%= order._id %>')" class="btn btn-danger">
                                    Cancel Order
                                </button>
                            <% } %>
                        </div>
                    </div>
                </div>

                <!-- Shipping Address -->
                <div class="address-card">
                    <h5 class="mb-3">Shipping Address</h5>
                    <p class="mb-1"><strong><%= order.address.name %></strong></p>
                    <p class="mb-1"><%= order.address.streetAddress %></p>
                    <p class="mb-1"><%= order.address.city %>, <%= order.address.state %> <%= order.address.pincode %></p>
                    <p class="mb-1">Phone: <%= order.address.phone %></p>
                    <p class="mb-0">Email: <%= order.address.email %></p>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Return Modal -->
<div class="modal fade" id="returnModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Return Request</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="returnForm">
                    <div class="mb-3">
                        <label class="form-label">Return Reason Category</label>
                        <select class="form-select" id="returnReason" required>
                            <option value="">Select a reason</option>
                            <option value="Wrong size">Wrong size</option>
                            <option value="Damaged product">Damaged product</option>
                            <option value="Not as described">Not as described</option>
                            <option value="Quality issues">Quality issues</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Detailed Description</label>
                        <textarea class="form-control" id="returnDescription" rows="3" placeholder="Please provide more details about your return reason..." required></textarea>
                        <small class="text-muted">Please explain the issue in detail to help us better understand your return request.</small>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Upload Images (Optional)</label>
                        <input type="file" class="form-control" id="returnImages" multiple accept="image/*">
                        <small class="text-muted">You can upload up to 3 images</small>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" onclick="submitReturn()">Submit Return Request</button>
            </div>
        </div>
    </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
async function cancelOrder(orderId) {
    const { value: reasonOption } = await Swal.fire({
        title: 'Cancel Order',
        input: 'select',
        inputLabel: 'Select a reason for cancellation',
        inputOptions: {
            'Ordered by mistake': 'Ordered by mistake',
            'Found a better price': 'Found a better price',
            'Delivery took too long': 'Delivery took too long',
            'Item no longer needed': 'Item no longer needed',
            'Changed my mind': 'Changed my mind',
            'Wrong item ordered': 'Wrong item ordered',
            'Other': 'Other'
        },
        showCancelButton: true
    });

    if (!reasonOption) return;

    let finalReason = reasonOption;

    if (reasonOption === 'Other') {
        const { value: otherReason } = await Swal.fire({
            title: 'Cancel Order',
            input: 'textarea',
            inputLabel: 'Please provide a reason for cancellation',
            inputPlaceholder: 'Type your reason here...',
            showCancelButton: true,
            inputValidator: (value) => {
                if (!value) {
                    return 'You need to provide a reason!';
                }
            }
        });

        if (!otherReason) return;
        finalReason = otherReason;
    }

    try {
        const response = await fetch('/orders/cancel', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ orderId, reason: finalReason }),
        });

        const data = await response.json();

        if (data.success) {
            await Swal.fire({
                icon: 'success',
                title: 'Success',
                text: 'Order cancelled successfully',
                timer: 1500
            });
            location.reload();
        } else {
            throw new Error(data.message);
        }
    } catch (error) {
        console.error('Error:', error);
        await Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to cancel order'
        });
    }
}

let currentOrderId = null;

function initiateReturn(orderId) {
    currentOrderId = orderId;
    const modal = new bootstrap.Modal(document.getElementById('returnModal'));
    modal.show();
}

document.getElementById('returnReason')?.addEventListener('change', function() {
    const otherReasonDiv = document.getElementById('otherReasonDiv');
    if (this.value === 'Other') {
        otherReasonDiv?.classList.remove('d-none');
    } else {
        otherReasonDiv?.classList.add('d-none');
    }
});

async function submitReturn() {
    try {
        const reasonSelect = document.getElementById('returnReason');
        const returnDescription = document.getElementById('returnDescription');
        const imagesInput = document.getElementById('returnImages');
        
        const returnReason = reasonSelect.value;
        const description = returnDescription.value;

        if (!returnReason || !description) {
            Swal.fire({
                icon: 'error',
                title: 'Oops...',
                text: 'Please select a reason category and provide a detailed description!',
            });
            return;
        }

        const formData = new FormData();
        formData.append('orderId', currentOrderId);
        formData.append('returnReason', returnReason);
        formData.append('returnDescription', description);

        const files = imagesInput.files;
        for (let i = 0; i < Math.min(files.length, 3); i++) {
            formData.append('images', files[i]);
        }

        const response = await fetch('/orders/return', {
            method: 'POST',
            body: formData
        });

        const data = await response.json();
        
        if (data.success) {
            Swal.fire({
                icon: 'success',
                title: 'Success!',
                text: 'Return request submitted successfully!',
                confirmButtonText: 'OK'
            }).then(() => {
                location.reload();
            });
        } else {
            throw new Error(data.message);
        }
    } catch (error) {
        console.error('Error:', error);
        Swal.fire({
            icon: 'error',
            title: 'Error!',
            text: error.message || 'Failed to submit return request',
        });
    }
}

async function cancelReturn(orderId) {
    try {
        const result = await Swal.fire({
            title: 'Cancel Return Request',
            text: 'Are you sure you want to cancel your return request?',
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Yes, cancel it!'
        });

        if (result.isConfirmed) {
            const response = await fetch('/orders/cancel-return', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ orderId }),
            });

            const data = await response.json();
            
            if (data.success) {
                await Swal.fire({
                    icon: 'success',
                    title: 'Success',
                    text: 'Return request cancelled successfully',
                    timer: 1500
                });
                location.reload();
            } else {
                throw new Error(data.message);
            }
        }
    } catch (error) {
        console.error('Error:', error);
        await Swal.fire({
            icon: 'error',
            title: 'Error',
            text: error.message || 'Failed to cancel return request'
        });
    }
}
</script>

<%- include('../partials/user/footer') %>