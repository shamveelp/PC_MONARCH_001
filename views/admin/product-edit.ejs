<%- include("../../views/partials/admin/header") %>
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    <style>
        .thumbnails-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        .thumbnail {
            position: relative;
            width: 150px;
        }
        .thumbnail img {
            width: 100%;
            height: 150px;
            object-fit: cover;
        }
        .delete-btn {
            position: absolute;
            top: 5px;
            right: 5px;
            background-color: rgba(255, 0, 0, 0.7);
            color: white;
            border: none;
            border-radius: 50%;
            width: 25px;
            height: 25px;
            font-size: 12px;
            cursor: pointer;
        }
        .cropper-container {
            width: 100%;
            max-width: 500px;
            margin: 20px auto;
        }
    </style>
</head>
<section class="content-main">
    <div class="content-header">
        <h2 class="content-title">Edit Product</h2>
    </div>
    <div class="card mb-4">
        <div class="card-body">
            <form id="editProductForm" method="POST" action="/admin/editProduct/<%= product._id %>" enctype="multipart/form-data">
                <div class="mb-4">
                    <label for="product_name" class="form-label">Product Name</label>
                    <input type="text" name="productName" value="<%= product.productName %>" class="form-control" id="product_name" required>
                </div>
                
                <div class="mb-4">
                    <label class="form-label">Description</label>
                    <textarea name="description" class="form-control" rows="4" required><%= product.description %></textarea>
                </div>

                <div class="mb-4">
                    <label class="form-label">Full Description</label>
                    <textarea name="fullDescription" class="form-control" rows="6" required><%= product.fullDescription %></textarea>
                </div>

                <div class="row">
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Regular Price</label>
                            <input name="regularPrice" type="number" value="<%= product.regularPrice %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Sale Price</label>
                            <input name="salePrice" type="number" value="<%= product.salePrice %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Quantity</label>
                            <input name="quantity" type="number" value="<%= product.quantity %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-3">
                        <div class="mb-4">
                            <label class="form-label">Color</label>
                            <input name="color" type="text" value="<%= product.color %>" class="form-control" required>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label class="form-label">Brand</label>
                            <input name="brand" type="text" value="<%= product.brand %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label class="form-label">Processor</label>
                            <input name="processor" type="text" value="<%= product.processor %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label class="form-label">Graphics Card</label>
                            <input name="graphicsCard" type="text" value="<%= product.graphicsCard %>" class="form-control" required>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label class="form-label">Storage</label>
                            <input name="storages" type="text" value="<%= product.storages %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label class="form-label">Display</label>
                            <input name="display" type="text" value="<%= product.display %>" class="form-control" required>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="mb-4">
                            <label class="form-label">Operating System</label>
                            <input name="operatingSystem" type="text" value="<%= product.operatingSystem %>" class="form-control" required>
                        </div>
                    </div>
                </div>

                <div class="mb-4">
                    <label class="form-label">Box Contains</label>
                    <input name="boxContains" type="text" value="<%= product.boxContains %>" class="form-control" required>
                </div>

                <div class="mb-4">
                    <label class="form-label">Category</label>
                    <select class="form-select" name="category" required>
                        <% for(let i = 0; i < cat.length; i++) { %>
                            <option value="<%= cat[i]._id %>" <%= product.category.equals(cat[i]._id) ? 'selected' : '' %>>
                                <%= cat[i].name %>
                            </option>
                        <% } %>
                    </select>
                </div>

                <div class="mb-4">
                    <label class="form-label">Product Images</label>
                    <div class="row">
                        <% for(let i = 0; i < 4; i++) { %>
                            <div class="col-md-3 mb-3">
                                <div class="card">
                                    <% if(product.productImage[i]) { %>
                                        <img src="/<%= product.productImage[i] %>" class="card-img-top" alt="Product Image">
                                        <div class="card-body">
                                            <button type="button" class="btn btn-danger btn-sm" onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>', <%= i %>)">Delete</button>
                                        </div>
                                    <% } else { %>
                                        <div class="card-body">
                                            <input type="file" name="image<%= i+1 %>" accept="image/*" class="form-control" onchange="previewImage(event, <%= i %>)">
                                            <img id="preview<%= i %>" src="#" alt="Image preview" style="display: none; max-width: 100%; height: auto; margin-top: 10px;">
                                        </div>
                                    <% } %>
                                </div>
                            </div>
                        <% } %>
                    </div>
                </div>

                

                <div id="cropperContainer" class="cropper-container" style="display: none;">
                    <img id="cropperImage" src="/placeholder.svg" alt="Image to crop">
                </div>

                <div class="mb-4">
                    <button class="btn btn-primary" type="submit">Update Product</button>
                </div>
            </form>
        </div>
    </div>
</section>

<script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<script>
    let cropper;
    const newImagesInput = document.getElementById('newImages');
    const cropperContainer = document.getElementById('cropperContainer');
    const cropperImage = document.getElementById('cropperImage');
    const form = document.getElementById('editProductForm');

    newImagesInput.addEventListener('change', function(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                cropperImage.src = e.target.result;
                cropperContainer.style.display = 'block';
                if (cropper) {
                    cropper.destroy();
                }
                cropper = new Cropper(cropperImage, {
                    aspectRatio: 1,
                    viewMode: 1,
                });
            }
            reader.readAsDataURL(file);
        }
    });

    form.addEventListener('submit', function(event) {
        event.preventDefault();
        if (cropper) {
            cropper.getCroppedCanvas().toBlob((blob) => {
                const formData = new FormData(form);
                formData.set('newImages', blob, 'cropped-image.jpg');
                
                fetch(form.action, {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        alert('Product updated successfully');
                        window.location.href = '/admin/products';
                    } else {
                        alert('Error updating product: ' + data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while updating the product');
                });
            }, 'image/jpeg');
        } else {
            form.submit();
        }
    });

    let croppers = {};

    function previewImage(event, index) {
        const input = event.target;
        if (input.files && input.files[0]) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const preview = document.getElementById(`preview${index}`);
                preview.src = e.target.result;
                preview.style.display = 'block';

                if (croppers[index]) {
                    croppers[index].destroy();
                }

                croppers[index] = new Cropper(preview, {
                    aspectRatio: 1,
                    viewMode: 1,
                    ready: function() {
                        this.cropper.crop();
                    }
                });
            };
            reader.readAsDataURL(input.files[0]);
        }
    }

    function deleteSingleImage(imageName, productId, index) {
        if (confirm('Are you sure you want to delete this image?')) {
            fetch('/admin/deleteImage', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    imageNameToServer: imageName,
                    productIdToServer: productId,
                    imageIndex: index
                }),
            })
            .then(response => response.json())
            .then(data => {
                if (data.status) {
                    location.reload();
                } else {
                    alert('Failed to delete image');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while deleting the image');
            });
        }
    }

    document.getElementById('editProductForm').addEventListener('submit', function(e) {
        e.preventDefault();
        
        const formData = new FormData(this);

        // Process cropped images
        for (let i = 0; i < 4; i++) {
            if (croppers[i]) {
                croppers[i].getCroppedCanvas().toBlob((blob) => {
                    formData.set(`image${i+1}`, blob, `cropped-image-${i+1}.jpg`);
                }, 'image/jpeg');
            }
        }

        fetch(this.action, {
            method: 'POST',
            body: formData
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                alert('Product updated successfully');
                window.location.href = '/admin/products';
            } else {
                alert('Error updating product: ' + data.message);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert('An error occurred while updating the product');
        });
    });
</script>

<%- include("../../views/partials/admin/footer") %>