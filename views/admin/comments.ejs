<%- include("../../views/partials/admin/header") %>

<style>

:root {
    --primary-color: #4a90e2;
    --secondary-color: #2d3748;
    --success-color: #38a169;
    --danger-color: #e53e3e;
    --light-gray: #f7fafc;
    --white: #ffffff;
    --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }
</style>

<div class="container-fluid">
  <div class="row">
    <div class="col-12">
      <div class="card">
        <div class="card-header">
          <h3 class="card-title">Product Comments Management</h3>
        </div>
        <div class="card-body">
          <% if (comments && comments.length > 0) { %>
            <div class="table-responsive">
              <table class="table table-bordered table-hover">
                <thead>
                  <tr>
                    <th>Product</th>
                    <th>User</th>
                    <th>Comment</th>
                    <th>Date</th>
                    <th>Actions</th>
                  </tr>
                </thead>
                <tbody>
                  <% comments.forEach(comment => { %>
                    <tr id="comment-<%= comment._id %>">
                      <td><%= comment.productId.productName %></td>
                      <td><%= comment.userId.name %></td>
                      <td><%= comment.comment %></td>
                      <td><%= new Date(comment.createdAt).toLocaleDateString() %></td>
                      <td>
                        <button class="btn btn-danger btn-sm" onclick="deleteComment('<%= comment._id %>')">
                          Delete
                        </button>
                        <% if (!comment.isBlocked) { %>
                          <button class="btn btn-warning btn-sm" onclick="blockComment('<%= comment._id %>')">
                            Block
                          </button>
                        <% } else{%>
                            <button class="btn btn-success btn-sm" onclick="unBlockComment('<%= comment._id %>')">
                                Unblock
                            </button>
                        <% } %>
                      </td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>

            <!-- Pagination -->
            <div class="d-flex justify-content-center mt-4">
              <nav aria-label="Page navigation">
                <ul class="pagination">
                  <% for(let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                      <a class="page-link" href="/admin/comments?page=<%= i %>"><%= i %></a>
                    </li>
                  <% } %>
                </ul>
              </nav>
            </div>
          <% } else { %>
            <div class="alert alert-info">No comments found.</div>
          <% } %>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
async function deleteComment(commentId) {
const result = await Swal.fire({
    title: 'Are you sure?',
    text: "You won't be able to revert this!",
    icon: 'warning',
    showCancelButton: true,
    confirmButtonColor: '#3085d6',
    cancelButtonColor: '#d33',
    confirmButtonText: 'Yes, delete it!'
});

if (!result.isConfirmed) return;

  try {
    const response = await fetch(`/admin/comments/${commentId}`, {
      method: 'DELETE'
    });
    const data = await response.json();

    if (data.status) {
      document.getElementById(`comment-${commentId}`).remove();
      Swal.fire({
        icon: 'success',
        title: 'Comment deleted successfully'
      });
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Failed to delete comment',
        text: data.message
      })
    }
  } catch (error) {
    console.error('Error:', error);
    alert('An error occurred while deleting the comment');
  }
}

async function blockComment(commentId) {
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You want to block this comment?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, block it!'
    });
  if (!result.isConfirmed) return;

  try {
    const response = await fetch(`/admin/comments/${commentId}/block`, {
      method: 'POST'
    });
    const data = await response.json();

    if (data.status) {
      location.reload();
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Failed to block comment',
        text: data.message
      });
    }
  } catch (error) {
    console.error('Error:', error);
    alert('An error occurred while blocking the comment');
  }
}

async function unBlockComment(commentId) {
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You want to unblock this comment?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, unblock it!'
    });
  if (!result.isConfirmed) return;

  try {
    const response = await fetch(`/admin/comments/${commentId}/unblock`, {
      method: 'POST'
    });
    const data = await response.json();

    if (data.status) {
      location.reload();
    } else {
      Swal.fire({
        icon: 'error',
        title: 'Failed to unblock comment',
        text: data.message
      });
    }
  } catch (error) {
    console.error('Error:', error);
    alert('An error occurred while unblocking the comment');
  }
}


</script>

<%- include("../../views/partials/admin/footer") %>