<%- include("../../views/partials/admin/header") %>
<style>
  :root {
    --primary-color: #4a90e2;
    --secondary-color: #2d3748;
    --success-color: #38a169;
    --danger-color: #e53e3e;
    --light-gray: #f7fafc;
    --white: #ffffff;
    --shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: var(--light-gray);
    color: var(--secondary-color);
  }

  .content-main {
    padding: 40px 20px;
    max-width: 1200px;
    margin: 0 auto;
  }

  .content-header {
    margin-bottom: 30px;
  }

  .content-title {
    font-size: 2rem;
    font-weight: 600;
    color: var(--secondary-color);
    margin: 0;
  }

  .card {
    background: var(--white);
    border-radius: 12px;
    box-shadow: var(--shadow);
    padding: 30px;
    margin-bottom: 20px;
  }

  .row {
    display: flex;
    gap: 30px;
    flex-wrap: wrap;
  }

  .col-md-3 {
    flex: 1;
    min-width: 300px;
  }

  .col-md-7 {
    flex: 2;
    min-width: 500px;
  }

  .form-label {
    font-weight: 500;
    margin-bottom: 8px;
    color: var(--secondary-color);
  }

  .form-control {
    width: 100%;
    padding: 12px;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    font-size: 1rem;
    transition: border-color 0.3s ease;
  }

  .form-control:focus {
    border-color: var(--primary-color);
    outline: none;
    box-shadow: 0 0 5px rgba(74, 144, 226, 0.3);
  }

  .error-message {
    color: var(--danger-color);
    font-size: 0.875rem;
    margin-top: 5px;
  }

  .d-grid {
    margin-top: 25px;
  }

  .btn-primary {
    background-color: var(--primary-color);
    color: var(--white);
    border: none;
    padding: 12px 24px;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.3s ease;
    width: 100%;
  }

  .btn-primary:hover {
    background-color: #357abd;
  }

  /* Coupon Card Styles */
  .coupon-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 20px;
    margin-top: 20px;
  }

  .coupon-card {
    background: var(--white);
    border-radius: 12px;
    box-shadow: var(--shadow);
    padding: 20px;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .coupon-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
  }

  .coupon-card h3 {
    font-size: 1.25rem;
    font-weight: 600;
    margin: 0 0 10px;
    color: var(--primary-color);
  }

  .coupon-card p {
    margin: 8px 0;
    font-size: 0.95rem;
    color: var(--secondary-color);
  }

  .coupon-card .status {
    font-weight: 500;
    color: var(--success-color);
  }

  .coupon-card .actions {
    margin-top: 15px;
    display: flex;
    gap: 10px;
  }

  .btn-sm {
    padding: 8px 16px;
    border-radius: 6px;
    font-size: 0.875rem;
    text-decoration: none;
    text-align: center;
  }

  .btn-primary.btn-sm {
    background-color: var(--primary-color);
    color: var(--white);
    flex: 1;
  }

  .btn-primary.btn-sm:hover {
    background-color: #357abd;
  }

  .btn-danger.btn-sm {
    background-color: var(--danger-color);
    color: var(--white);
    flex: 1;
  }

  .btn-danger.btn-sm:hover {
    background-color: #c53030;
  }

  @media (max-width: 768px) {
    .col-md-7 {
      min-width: 100%;
    }
    .coupon-grid {
      grid-template-columns: 1fr;
    }
  }
</style>

<section class="content-main">
  <div class="content-header">
    <h2 class="content-title card-title">Coupons</h2>
  </div>
  <div class="card">
    <div class="card-body">
      <div class="row">
        <div class="col-md-3">
          <form method="post" action="/admin/createCoupon">
            <body onload="setDefaultStartDate()"></body>
            <div class="mb-4">
              <label for="coupon-name" class="form-label">Coupon Name</label>
              <input
                type="text"
                id="coupon-name"
                name="couponName"
                placeholder="Type here"
                class="form-control"
              />
              <div id="error-coupon-name" class="error-message"></div>
            </div>

            <div>
              <label for="startingDate" class="form-label">Start Date</label>
              <input
                type="date"
                name="startDate"
                class="form-control"
                required="true"
                id="startingDate"
              />
              <div id="error-start-date" class="error-message"></div>
            </div>

            <div>
              <label for="expiringDate" class="form-label">End Date</label>
              <input
                type="date"
                name="endDate"
                class="form-control"
                id="expiringDate"
                required="true"
              />
              <div id="error-end-date" class="error-message"></div>
            </div>

            <div>
              <label for="offer-price" class="form-label">Offer Price</label>
              <input
                type="text"
                name="offerPrice"
                placeholder="Type here"
                class="form-control"
              />
              <div id="error-offer-price" class="error-message"></div>
            </div>

            <div>
              <label for="minimum-price" class="form-label">Minimum Price</label>
              <input
                type="text"
                name="minimumPrice"
                placeholder="Type here"
                class="form-control"
              />
              <div id="error-minimum-price" class="error-message"></div>
            </div>

            <div class="d-grid">
              <button
                class="btn btn-primary"
                onclick="return validateForm(event)"
                type="submit"
              >
                Add Coupon
              </button>
            </div>
            <div id="err-msg" class="error-message"></div>
          </form>
        </div>
        <div class="col-md-7">
          <div class="coupon-grid">
            <% for(let i=0; i < coupons.length; i++) { %>
            <div class="coupon-card">
              <h3><%= coupons[i].name %></h3>
              <p><strong>Created On:</strong> <%= new Date(coupons[i].createdOn).toLocaleDateString('en-IN') %></p>
              <p><strong>Expires On:</strong> <%= new Date(coupons[i].expireOn).toLocaleDateString('en-IN') %></p>
              <p><strong>Offer Price:</strong> <%= coupons[i].offerPrice %></p>
              <p><strong>Minimum Price:</strong> <%= coupons[i].minimumPrice %></p>
              <p><strong>Status:</strong> <span class="status"><%= coupons[i].isList %></span></p>
              <div class="actions">
                <a href="/admin/editCoupon?id=<%= coupons[i]._id %>" class="btn btn-primary btn-sm">Edit</a>
                <a href="#" onclick="confirmDelete('<%= coupons[i]._id %>')" class="btn btn-danger btn-sm">Delete</a>
              </div>
            </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  function validateForm() {
    document.querySelectorAll(".error-message").forEach((element) => (element.innerHTML = ""));
    const sDate = document.getElementsByName("startDate")[0].value;
    const eDate = document.getElementsByName("endDate")[0].value;
    const sDateObj = new Date(sDate);
    const eDateObj = new Date(eDate);
    const todayDateObj = new Date();
    todayDateObj.setHours(0, 0, 0, 0);

    if (sDateObj > eDateObj) {
      document.getElementById("error-end-date").innerHTML = "End date should be after the start date";
      return false;
    }

    if (sDateObj <= todayDateObj) {
      document.getElementById("error-start-date").innerHTML = "Starting date should be greater than or equal to today's date";
      return false;
    }

    let name = document.getElementsByName("couponName")[0].value;
    const nameRegex = /^[A-Za-z0-9]{1,50}$/;

    if (!nameRegex.test(name)) {
      document.getElementById("error-coupon-name").innerHTML = "Coupon Name error";
      return false;
    }

    const offerPriceInput = document.getElementsByName("offerPrice")[0];
    const minimumPriceInput = document.getElementsByName("minimumPrice")[0];

    const offerPrice = offerPriceInput.value.trim() !== "" ? parseInt(offerPriceInput.value) : NaN;
    const minimumPrice = minimumPriceInput.value.trim() !== "" ? parseInt(minimumPriceInput.value) : NaN;

    if (isNaN(offerPrice) || isNaN(minimumPrice) || offerPrice >= minimumPrice) {
      document.getElementById("error-offer-price").innerHTML = "Offer Price must be greater than Minimum Price";
      return false;
    }

    if (isNaN(offerPrice) || isNaN(minimumPrice)) {
      document.getElementById("error-offer-price").innerHTML = "Please enter numeric values for Offer Price and Minimum Price";
      return false;
    }

    const formData = {
      couponName: name,
      startDate: sDateObj,
      endDate: eDateObj,
      offerPrice: offerPrice,
      minimumPrice: minimumPrice
    };
    return true;
  }

  function confirmDelete(couponId) {
    Swal.fire({
      title: "Are you sure?",
      text: "You won't be able to revert this!",
      icon: "warning",
      showCancelButton: true,
      confirmButtonColor: "#d33",
      cancelButtonColor: "#3085d6",
      confirmButtonText: "Yes, delete it!",
    }).then((result) => {
      if (result.isConfirmed) {
        deleteCoupon(couponId);
      }
    });
  }

  function deleteCoupon(couponId) {
    $.ajax({
      url: `/admin/deletecoupon?id=${couponId}`,
      method: "GET",
      success: function () {
        Swal.fire({
          icon: "success",
          title: "Deleted!",
          text: "The coupon has been deleted.",
          confirmButtonText: "OK",
        }).then(() => {
          window.location.reload();
        });
      },
      error: function () {
        Swal.fire({
          icon: "error",
          title: "Error!",
          text: "Failed to delete the coupon. Please try again.",
        });
      },
    });
  }

  function setDefaultStartDate() {
    const today = new Date();
    const year = today.getFullYear();
    let month = (today.getMonth() + 1).toString().padStart(2, "0");
    let day = today.getDate().toString().padStart(2, "0");
    document.getElementById("startingDate").value = `${year}-${month}-${day}`;
  }
</script>
<%- include("../../views/partials/admin/footer") %>